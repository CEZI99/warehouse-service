services:
  redis:
    image: redis:7-alpine
    container_name: warehouse_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      REDIS_MAXMEMORY: 256mb
      REDIS_MAXMEMORY_POLICY: allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 3

  postgres:
    image: postgres:13
    container_name: warehouse_postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-warehouse_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-user} -d ${DB_NAME:-warehouse_db}"]
      interval: 5s
      retries: 3

  app:
    build: .
    container_name: warehouse_app
    env_file:
      - .env
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DATABASE_URL=postgresql+asyncpg://${DB_USER:-user}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-warehouse_db}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: warehouse_kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: 
        - "CMD-SHELL"
        - "kafka-broker-api-versions --bootstrap-server localhost:9092"
      interval: 15s
      timeout: 20s
      retries: 20
      start_period: 60s  # Kafka может долго запускаться
    depends_on:
      zookeeper:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: warehouse_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_HEAP_OPTS: "-Xmx512m -Xms512m"  # Уменьшаем память для тестов
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 30s

volumes:
  redis_data:
  postgres_data: